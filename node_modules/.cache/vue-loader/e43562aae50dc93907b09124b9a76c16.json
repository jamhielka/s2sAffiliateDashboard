{"remainingRequest":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JK2L2\\BUCKET\\s2sTracker\\src\\views\\pages\\addEmployee.vue?vue&type=template&id=11995ffa&","dependencies":[{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\src\\views\\pages\\addEmployee.vue","mtime":1646622190493},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648770304215},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1648770308327},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648770304215},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\vue-loader\\lib\\index.js","mtime":1648770307141}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}