{"remainingRequest":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\babel-loader\\lib\\index.js!D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\common.js","dependencies":[{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\common.js","mtime":1648193569880},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\babel.config.js","mtime":1648769491690},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648193571030},{"path":"D:\\JK2L2\\BUCKET\\s2sTracker\\node_modules\\babel-loader\\lib\\index.js","mtime":1648193571283}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkQ6L0pLMkwyL0JVQ0tFVC9zMnNUcmFja2VyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IHsgZ2V0VGltZXN0YW1wSWRlbnRpZmllciB9IGZyb20gJy4uL3V0aWwvdGltZXN0YW1wJzsKdmFyIE1JTExJU19JTl9EQVkgPSA4NjQwMDAwMDsKCmZ1bmN0aW9uIF9nZXRWaXN1YWxzKGV2ZW50cykgewogIHZhciBtaW5TdGFydCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDsKICB2YXIgdmlzdWFscyA9IGV2ZW50cy5tYXAoZnVuY3Rpb24gKGV2ZW50KSB7CiAgICByZXR1cm4gewogICAgICBldmVudDogZXZlbnQsCiAgICAgIGNvbHVtbkNvdW50OiAwLAogICAgICBjb2x1bW46IDAsCiAgICAgIGxlZnQ6IDAsCiAgICAgIHdpZHRoOiAxMDAKICAgIH07CiAgfSk7CiAgdmlzdWFscy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICByZXR1cm4gTWF0aC5tYXgobWluU3RhcnQsIGEuZXZlbnQuc3RhcnRUaW1lc3RhbXBJZGVudGlmaWVyKSAtIE1hdGgubWF4KG1pblN0YXJ0LCBiLmV2ZW50LnN0YXJ0VGltZXN0YW1wSWRlbnRpZmllcikgfHwgYi5ldmVudC5lbmRUaW1lc3RhbXBJZGVudGlmaWVyIC0gYS5ldmVudC5lbmRUaW1lc3RhbXBJZGVudGlmaWVyOwogIH0pOwogIHJldHVybiB2aXN1YWxzOwp9CgpleHBvcnQgeyBfZ2V0VmlzdWFscyBhcyBnZXRWaXN1YWxzIH07CmV4cG9ydCBmdW5jdGlvbiBoYXNPdmVybGFwKHMwLCBlMCwgczEsIGUxKSB7CiAgdmFyIGV4Y2x1ZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHRydWU7CiAgcmV0dXJuIGV4Y2x1ZGUgPyAhKHMwID49IGUxIHx8IGUwIDw9IHMxKSA6ICEoczAgPiBlMSB8fCBlMCA8IHMxKTsKfQpleHBvcnQgZnVuY3Rpb24gc2V0Q29sdW1uQ291bnQoZ3JvdXBzKSB7CiAgZ3JvdXBzLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7CiAgICBncm91cC52aXN1YWxzLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwVmlzdWFsKSB7CiAgICAgIGdyb3VwVmlzdWFsLmNvbHVtbkNvdW50ID0gZ3JvdXBzLmxlbmd0aDsKICAgIH0pOwogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5nZShldmVudCkgewogIHJldHVybiBbZXZlbnQuc3RhcnRUaW1lc3RhbXBJZGVudGlmaWVyLCBldmVudC5lbmRUaW1lc3RhbXBJZGVudGlmaWVyXTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0RGF5UmFuZ2UoZXZlbnQpIHsKICByZXR1cm4gW2V2ZW50LnN0YXJ0SWRlbnRpZmllciwgZXZlbnQuZW5kSWRlbnRpZmllcl07Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRSYW5nZShldmVudCwgZGF5U3RhcnQpIHsKICByZXR1cm4gW01hdGgubWF4KGRheVN0YXJ0LCBldmVudC5zdGFydFRpbWVzdGFtcElkZW50aWZpZXIpLCBNYXRoLm1pbihkYXlTdGFydCArIE1JTExJU19JTl9EQVksIGV2ZW50LmVuZFRpbWVzdGFtcElkZW50aWZpZXIpXTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0T3Blbkdyb3VwKGdyb3Vwcywgc3RhcnQsIGVuZCwgdGltZWQpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGdyb3VwID0gZ3JvdXBzW2ldOwogICAgdmFyIGludGVyc2VjdGVkID0gZmFsc2U7CgogICAgaWYgKGhhc092ZXJsYXAoc3RhcnQsIGVuZCwgZ3JvdXAuc3RhcnQsIGdyb3VwLmVuZCwgdGltZWQpKSB7CiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgZ3JvdXAudmlzdWFscy5sZW5ndGg7IGsrKykgewogICAgICAgIHZhciBncm91cFZpc3VhbCA9IGdyb3VwLnZpc3VhbHNba107CgogICAgICAgIHZhciBfcmVmID0gdGltZWQgPyBnZXRSYW5nZShncm91cFZpc3VhbC5ldmVudCkgOiBnZXREYXlSYW5nZShncm91cFZpc3VhbC5ldmVudCksCiAgICAgICAgICAgIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgIGdyb3VwU3RhcnQgPSBfcmVmMlswXSwKICAgICAgICAgICAgZ3JvdXBFbmQgPSBfcmVmMlsxXTsKCiAgICAgICAgaWYgKGhhc092ZXJsYXAoc3RhcnQsIGVuZCwgZ3JvdXBTdGFydCwgZ3JvdXBFbmQsIHRpbWVkKSkgewogICAgICAgICAgaW50ZXJzZWN0ZWQgPSB0cnVlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgaWYgKCFpbnRlcnNlY3RlZCkgewogICAgICByZXR1cm4gaTsKICAgIH0KICB9CgogIHJldHVybiAtMTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0T3ZlcmxhcEdyb3VwSGFuZGxlcihmaXJzdFdlZWtkYXkpIHsKICB2YXIgaGFuZGxlciA9IHsKICAgIGdyb3VwczogW10sCiAgICBtaW46IC0xLAogICAgbWF4OiAtMSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgaGFuZGxlci5ncm91cHMgPSBbXTsKICAgICAgaGFuZGxlci5taW4gPSBoYW5kbGVyLm1heCA9IC0xOwogICAgfSwKICAgIGdldFZpc3VhbHM6IGZ1bmN0aW9uIGdldFZpc3VhbHMoZGF5LCBkYXlFdmVudHMsIHRpbWVkKSB7CiAgICAgIHZhciByZXNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogZmFsc2U7CgogICAgICBpZiAoZGF5LndlZWtkYXkgPT09IGZpcnN0V2Vla2RheSB8fCByZXNldCkgewogICAgICAgIGhhbmRsZXIucmVzZXQoKTsKICAgICAgfQoKICAgICAgdmFyIGRheVN0YXJ0ID0gZ2V0VGltZXN0YW1wSWRlbnRpZmllcihkYXkpOwoKICAgICAgdmFyIHZpc3VhbHMgPSBfZ2V0VmlzdWFscyhkYXlFdmVudHMsIGRheVN0YXJ0KTsKCiAgICAgIHZpc3VhbHMuZm9yRWFjaChmdW5jdGlvbiAodmlzdWFsKSB7CiAgICAgICAgdmFyIF9yZWYzID0gdGltZWQgPyBnZXRSYW5nZSh2aXN1YWwuZXZlbnQpIDogZ2V0RGF5UmFuZ2UodmlzdWFsLmV2ZW50KSwKICAgICAgICAgICAgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMiksCiAgICAgICAgICAgIHN0YXJ0ID0gX3JlZjRbMF0sCiAgICAgICAgICAgIGVuZCA9IF9yZWY0WzFdOwoKICAgICAgICBpZiAoaGFuZGxlci5ncm91cHMubGVuZ3RoID4gMCAmJiAhaGFzT3ZlcmxhcChzdGFydCwgZW5kLCBoYW5kbGVyLm1pbiwgaGFuZGxlci5tYXgsIHRpbWVkKSkgewogICAgICAgICAgc2V0Q29sdW1uQ291bnQoaGFuZGxlci5ncm91cHMpOwogICAgICAgICAgaGFuZGxlci5yZXNldCgpOwogICAgICAgIH0KCiAgICAgICAgdmFyIHRhcmdldEdyb3VwID0gZ2V0T3Blbkdyb3VwKGhhbmRsZXIuZ3JvdXBzLCBzdGFydCwgZW5kLCB0aW1lZCk7CgogICAgICAgIGlmICh0YXJnZXRHcm91cCA9PT0gLTEpIHsKICAgICAgICAgIHRhcmdldEdyb3VwID0gaGFuZGxlci5ncm91cHMubGVuZ3RoOwogICAgICAgICAgaGFuZGxlci5ncm91cHMucHVzaCh7CiAgICAgICAgICAgIHN0YXJ0OiBzdGFydCwKICAgICAgICAgICAgZW5kOiBlbmQsCiAgICAgICAgICAgIHZpc3VhbHM6IFtdCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciB0YXJnZXQgPSBoYW5kbGVyLmdyb3Vwc1t0YXJnZXRHcm91cF07CiAgICAgICAgdGFyZ2V0LnZpc3VhbHMucHVzaCh2aXN1YWwpOwogICAgICAgIHRhcmdldC5zdGFydCA9IE1hdGgubWluKHRhcmdldC5zdGFydCwgc3RhcnQpOwogICAgICAgIHRhcmdldC5lbmQgPSBNYXRoLm1heCh0YXJnZXQuZW5kLCBlbmQpOwogICAgICAgIHZpc3VhbC5jb2x1bW4gPSB0YXJnZXRHcm91cDsKCiAgICAgICAgaWYgKGhhbmRsZXIubWluID09PSAtMSkgewogICAgICAgICAgaGFuZGxlci5taW4gPSBzdGFydDsKICAgICAgICAgIGhhbmRsZXIubWF4ID0gZW5kOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBoYW5kbGVyLm1pbiA9IE1hdGgubWluKGhhbmRsZXIubWluLCBzdGFydCk7CiAgICAgICAgICBoYW5kbGVyLm1heCA9IE1hdGgubWF4KGhhbmRsZXIubWF4LCBlbmQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHNldENvbHVtbkNvdW50KGhhbmRsZXIuZ3JvdXBzKTsKCiAgICAgIGlmICh0aW1lZCkgewogICAgICAgIGhhbmRsZXIucmVzZXQoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHZpc3VhbHM7CiAgICB9CiAgfTsKICByZXR1cm4gaGFuZGxlcjsKfQ=="},{"version":3,"mappings":";;;;;AACA,SAASA,sBAAT,QAAuC,mBAAvC;AAEA,IAAMC,aAAa,GAAG,QAAtB;;AAIM,SAAUC,WAAV,CAAsBC,MAAtB,EAAiE;AAAA,MAAZC,QAAY,uEAAD,CAAC;AACrE,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAP,CAAW,eAAK;AAAA,WAAK;AACnCC,WADmC,EACnCA,KADmC;AAEnCC,iBAAW,EAAE,CAFsB;AAGnCC,YAAM,EAAE,CAH2B;AAInCC,UAAI,EAAE,CAJ6B;AAKnCC,WAAK,EAAE;AAL4B,KAAL;AAAA,GAAhB,CAAhB;AAQAN,SAAO,CAACO,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAS;AACpB,WAAQC,IAAI,CAACC,GAAL,CAASZ,QAAT,EAAmBS,CAAC,CAACN,KAAF,CAAQU,wBAA3B,IAAuDF,IAAI,CAACC,GAAL,CAASZ,QAAT,EAAmBU,CAAC,CAACP,KAAF,CAAQU,wBAA3B,CAAvD,IACAH,CAAC,CAACP,KAAF,CAAQW,sBAAR,GAAiCL,CAAC,CAACN,KAAF,CAAQW,sBADjD;AADF;AAKA,SAAOb,OAAP;AACD;;;AAQD,OAAM,SAAUc,UAAV,CAAsBC,EAAtB,EAAkCC,EAAlC,EAA8CC,EAA9C,EAA0DC,EAA1D,EAAoF;AAAA,MAAdC,OAAc,uEAAJ,IAAI;AACxF,SAAOA,OAAO,GAAG,EAAEJ,EAAE,IAAIG,EAAN,IAAYF,EAAE,IAAIC,EAApB,CAAH,GAA6B,EAAEF,EAAE,GAAGG,EAAL,IAAWF,EAAE,GAAGC,EAAlB,CAA3C;AACD;AAED,OAAM,SAAUG,cAAV,CAA0BC,MAA1B,EAA+C;AACnDA,QAAM,CAACC,OAAP,CAAe,eAAK,EAAG;AACrBC,SAAK,CAACvB,OAAN,CAAcsB,OAAd,CAAsB,qBAAW,EAAG;AAClCE,iBAAW,CAACrB,WAAZ,GAA0BkB,MAAM,CAACI,MAAjC;AADF;AADF;AAKD;AAED,OAAM,SAAUC,QAAV,CAAoBxB,KAApB,EAA8C;AAClD,SAAO,CAACA,KAAK,CAACU,wBAAP,EAAiCV,KAAK,CAACW,sBAAvC,CAAP;AACD;AAED,OAAM,SAAUc,WAAV,CAAuBzB,KAAvB,EAAiD;AACrD,SAAO,CAACA,KAAK,CAAC0B,eAAP,EAAwB1B,KAAK,CAAC2B,aAA9B,CAAP;AACD;AAED,OAAM,SAAUC,kBAAV,CAA8B5B,KAA9B,EAA0D6B,QAA1D,EAA0E;AAC9E,SAAO,CAACrB,IAAI,CAACC,GAAL,CAASoB,QAAT,EAAmB7B,KAAK,CAACU,wBAAzB,CAAD,EAAqDF,IAAI,CAACsB,GAAL,CAASD,QAAQ,GAAGnC,aAApB,EAAmCM,KAAK,CAACW,sBAAzC,CAArD,CAAP;AACD;AAED,OAAM,SAAUoB,YAAV,CAAwBZ,MAAxB,EAA+Ca,KAA/C,EAA8DC,GAA9D,EAA2EC,KAA3E,EAAyF;AAC7F,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,MAAM,CAACI,MAA3B,EAAmCY,CAAC,EAApC,EAAwC;AACtC,QAAMd,KAAK,GAAGF,MAAM,CAACgB,CAAD,CAApB;AACA,QAAIC,WAAW,GAAG,KAAlB;;AAEA,QAAIxB,UAAU,CAACoB,KAAD,EAAQC,GAAR,EAAaZ,KAAK,CAACW,KAAnB,EAA0BX,KAAK,CAACY,GAAhC,EAAqCC,KAArC,CAAd,EAA2D;AACzD,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,KAAK,CAACvB,OAAN,CAAcyB,MAAlC,EAA0Cc,CAAC,EAA3C,EAA+C;AAC7C,YAAMf,WAAW,GAAGD,KAAK,CAACvB,OAAN,CAAcuC,CAAd,CAApB;;AACA,mBAA+BH,KAAK,GAAGV,QAAQ,CAACF,WAAW,CAACtB,KAAb,CAAX,GAAiCyB,WAAW,CAACH,WAAW,CAACtB,KAAb,CAAhF;AAAA;AAAA,YAAOsC,UAAP;AAAA,YAAmBC,QAAnB;;AAEA,YAAI3B,UAAU,CAACoB,KAAD,EAAQC,GAAR,EAAaK,UAAb,EAAyBC,QAAzB,EAAmCL,KAAnC,CAAd,EAAyD;AACvDE,qBAAW,GAAG,IAAd;AACA;AACD;AACF;AACF;;AAED,QAAI,CAACA,WAAL,EAAkB;AAChB,aAAOD,CAAP;AACD;AACF;;AAED,SAAO,CAAC,CAAR;AACD;AAED,OAAM,SAAUK,sBAAV,CAAkCC,YAAlC,EAAsD;AAC1D,MAAMC,OAAO,GAAG;AACdvB,UAAM,EAAE,EADM;AAEdW,OAAG,EAAE,CAAC,CAFQ;AAGdrB,OAAG,EAAE,CAAC,CAHQ;AAIdkC,SAAK,EAAE,iBAAK;AACVD,aAAO,CAACvB,MAAR,GAAiB,EAAjB;AACAuB,aAAO,CAACZ,GAAR,GAAcY,OAAO,CAACjC,GAAR,GAAc,CAAC,CAA7B;AANY;AAQdd,cAAU,EAAE,oBAACiD,GAAD,EAAyBC,SAAzB,EAA2DX,KAA3D,EAA4F;AAAA,UAAjBS,KAAiB,uEAAT,KAAS;;AACtG,UAAIC,GAAG,CAACE,OAAJ,KAAgBL,YAAhB,IAAgCE,KAApC,EAA2C;AACzCD,eAAO,CAACC,KAAR;AACD;;AAED,UAAMd,QAAQ,GAAGpC,sBAAsB,CAACmD,GAAD,CAAvC;;AACA,UAAM9C,OAAO,GAAGH,WAAU,CAACkD,SAAD,EAAYhB,QAAZ,CAA1B;;AAEA/B,aAAO,CAACsB,OAAR,CAAgB,gBAAM,EAAG;AACvB,oBAAqBc,KAAK,GAAGV,QAAQ,CAACuB,MAAM,CAAC/C,KAAR,CAAX,GAA4ByB,WAAW,CAACsB,MAAM,CAAC/C,KAAR,CAAjE;AAAA;AAAA,YAAOgC,KAAP;AAAA,YAAcC,GAAd;;AAEA,YAAIS,OAAO,CAACvB,MAAR,CAAeI,MAAf,GAAwB,CAAxB,IAA6B,CAACX,UAAU,CAACoB,KAAD,EAAQC,GAAR,EAAaS,OAAO,CAACZ,GAArB,EAA0BY,OAAO,CAACjC,GAAlC,EAAuCyB,KAAvC,CAA5C,EAA2F;AACzFhB,wBAAc,CAACwB,OAAO,CAACvB,MAAT,CAAd;AACAuB,iBAAO,CAACC,KAAR;AACD;;AAED,YAAIK,WAAW,GAAGjB,YAAY,CAACW,OAAO,CAACvB,MAAT,EAAiBa,KAAjB,EAAwBC,GAAxB,EAA6BC,KAA7B,CAA9B;;AAEA,YAAIc,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtBA,qBAAW,GAAGN,OAAO,CAACvB,MAAR,CAAeI,MAA7B;AAEAmB,iBAAO,CAACvB,MAAR,CAAe8B,IAAf,CAAoB;AAAEjB,iBAAF,EAAEA,KAAF;AAASC,eAAT,EAASA,GAAT;AAAcnC,mBAAO,EAAE;AAAvB,WAApB;AACD;;AAED,YAAMoD,MAAM,GAAGR,OAAO,CAACvB,MAAR,CAAe6B,WAAf,CAAf;AACAE,cAAM,CAACpD,OAAP,CAAemD,IAAf,CAAoBF,MAApB;AACAG,cAAM,CAAClB,KAAP,GAAexB,IAAI,CAACsB,GAAL,CAASoB,MAAM,CAAClB,KAAhB,EAAuBA,KAAvB,CAAf;AACAkB,cAAM,CAACjB,GAAP,GAAazB,IAAI,CAACC,GAAL,CAASyC,MAAM,CAACjB,GAAhB,EAAqBA,GAArB,CAAb;AAEAc,cAAM,CAAC7C,MAAP,GAAgB8C,WAAhB;;AAEA,YAAIN,OAAO,CAACZ,GAAR,KAAgB,CAAC,CAArB,EAAwB;AACtBY,iBAAO,CAACZ,GAAR,GAAcE,KAAd;AACAU,iBAAO,CAACjC,GAAR,GAAcwB,GAAd;AAFF,eAGO;AACLS,iBAAO,CAACZ,GAAR,GAActB,IAAI,CAACsB,GAAL,CAASY,OAAO,CAACZ,GAAjB,EAAsBE,KAAtB,CAAd;AACAU,iBAAO,CAACjC,GAAR,GAAcD,IAAI,CAACC,GAAL,CAASiC,OAAO,CAACjC,GAAjB,EAAsBwB,GAAtB,CAAd;AACD;AA7BH;AAgCAf,oBAAc,CAACwB,OAAO,CAACvB,MAAT,CAAd;;AAEA,UAAIe,KAAJ,EAAW;AACTQ,eAAO,CAACC,KAAR;AACD;;AAED,aAAO7C,OAAP;AACD;AAvDa,GAAhB;AA0DA,SAAO4C,OAAP;AACD","names":["getTimestampIdentifier","MILLIS_IN_DAY","getVisuals","events","minStart","visuals","map","event","columnCount","column","left","width","sort","a","b","Math","max","startTimestampIdentifier","endTimestampIdentifier","hasOverlap","s0","e0","s1","e1","exclude","setColumnCount","groups","forEach","group","groupVisual","length","getRange","getDayRange","startIdentifier","endIdentifier","getNormalizedRange","dayStart","min","getOpenGroup","start","end","timed","i","intersected","k","groupStart","groupEnd","getOverlapGroupHandler","firstWeekday","handler","reset","day","dayEvents","weekday","visual","targetGroup","push","target"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/modes/common.ts"],"sourcesContent":["import { CalendarEventParsed, CalendarEventVisual, CalendarTimestamp } from 'vuetify/types'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\nconst MILLIS_IN_DAY = 86400000\n\nexport type GetRange = (event: CalendarEventParsed) => [number, number]\n\nexport function getVisuals (events: CalendarEventParsed[], minStart = 0): CalendarEventVisual[] {\n  const visuals = events.map(event => ({\n    event,\n    columnCount: 0,\n    column: 0,\n    left: 0,\n    width: 100,\n  }))\n\n  visuals.sort((a, b) => {\n    return (Math.max(minStart, a.event.startTimestampIdentifier) - Math.max(minStart, b.event.startTimestampIdentifier)) ||\n           (b.event.endTimestampIdentifier - a.event.endTimestampIdentifier)\n  })\n\n  return visuals\n}\n\nexport interface ColumnGroup {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\nexport function hasOverlap (s0: number, e0: number, s1: number, e1: number, exclude = true): boolean {\n  return exclude ? !(s0 >= e1 || e0 <= s1) : !(s0 > e1 || e0 < s1)\n}\n\nexport function setColumnCount (groups: ColumnGroup[]) {\n  groups.forEach(group => {\n    group.visuals.forEach(groupVisual => {\n      groupVisual.columnCount = groups.length\n    })\n  })\n}\n\nexport function getRange (event: CalendarEventParsed): [number, number] {\n  return [event.startTimestampIdentifier, event.endTimestampIdentifier]\n}\n\nexport function getDayRange (event: CalendarEventParsed): [number, number] {\n  return [event.startIdentifier, event.endIdentifier]\n}\n\nexport function getNormalizedRange (event: CalendarEventParsed, dayStart: number): [number, number] {\n  return [Math.max(dayStart, event.startTimestampIdentifier), Math.min(dayStart + MILLIS_IN_DAY, event.endTimestampIdentifier)]\n}\n\nexport function getOpenGroup (groups: ColumnGroup[], start: number, end: number, timed: boolean) {\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i]\n    let intersected = false\n\n    if (hasOverlap(start, end, group.start, group.end, timed)) {\n      for (let k = 0; k < group.visuals.length; k++) {\n        const groupVisual = group.visuals[k]\n        const [groupStart, groupEnd] = timed ? getRange(groupVisual.event) : getDayRange(groupVisual.event)\n\n        if (hasOverlap(start, end, groupStart, groupEnd, timed)) {\n          intersected = true\n          break\n        }\n      }\n    }\n\n    if (!intersected) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function getOverlapGroupHandler (firstWeekday: number) {\n  const handler = {\n    groups: [] as ColumnGroup[],\n    min: -1,\n    max: -1,\n    reset: () => {\n      handler.groups = []\n      handler.min = handler.max = -1\n    },\n    getVisuals: (day: CalendarTimestamp, dayEvents: CalendarEventParsed[], timed: boolean, reset = false) => {\n      if (day.weekday === firstWeekday || reset) {\n        handler.reset()\n      }\n\n      const dayStart = getTimestampIdentifier(day)\n      const visuals = getVisuals(dayEvents, dayStart)\n\n      visuals.forEach(visual => {\n        const [start, end] = timed ? getRange(visual.event) : getDayRange(visual.event)\n\n        if (handler.groups.length > 0 && !hasOverlap(start, end, handler.min, handler.max, timed)) {\n          setColumnCount(handler.groups)\n          handler.reset()\n        }\n\n        let targetGroup = getOpenGroup(handler.groups, start, end, timed)\n\n        if (targetGroup === -1) {\n          targetGroup = handler.groups.length\n\n          handler.groups.push({ start, end, visuals: [] })\n        }\n\n        const target = handler.groups[targetGroup]\n        target.visuals.push(visual)\n        target.start = Math.min(target.start, start)\n        target.end = Math.max(target.end, end)\n\n        visual.column = targetGroup\n\n        if (handler.min === -1) {\n          handler.min = start\n          handler.max = end\n        } else {\n          handler.min = Math.min(handler.min, start)\n          handler.max = Math.max(handler.max, end)\n        }\n      })\n\n      setColumnCount(handler.groups)\n\n      if (timed) {\n        handler.reset()\n      }\n\n      return visuals\n    },\n  }\n\n  return handler\n}\n"]}]}